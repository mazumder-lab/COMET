{
    "bottom": {
        "module": "DenseBottomWithConcatenatedEmbeddingsNoDense",
        "params": {
            "input_size": 128,
            "embedding1_vocab_size": 6040,
            "embedding1_size": 128,
            "embedding2_vocab_size": 3952,
            "embedding2_size": 128
        }
    },
    "experts": [
        {
            "module": "DenseExpertDropout",
            "params": {
                "input_size": 256,
                "dense1_size": 256,
                "dropout1_rate": 0.5
            },
            "instances": 16
        }
    ],
    "permutations": [
        {
            "module": "NoPermutations",
            "params": {
                "input_size": 10
             },
            "instances": 1
        }
    ],
    "gates": [
        {
            "module": "SoftKTreesEnsembleGate",
            "params": {
                "k": {
                    "optuna_type": "suggest_categorical",
                    "values": [2]      
                },
                "input_size": 10,
                "gamma": {
                    "optuna_type": "suggest_categorical",
                    "values": [1e-2, 1e-1, 1, 5, 10]                      
                },
                "use_routing_input": true,
                "use_in_training": true,
                "entropy_reg": {
                    "optuna_type": "suggest_categorical",
                    "values": [5e-2, 1e-1, 5e-1, 1, 5, 10]  
                },
                "z_initializer": null,
                "w_initializer": null,
                "L2": {
                    "optuna_type": "suggest_categorical",
                    "values": [0.0, 0.0, 0.0, 0.0]
                },
                "balanced_splitting": false,
                "balanced_splitting_penalty": {
                    "optuna_type": "suggest_categorical",
                    "values": [0.0]  
                },
                "exp_decay_mov_ave": {
                    "optuna_type": "suggest_categorical",
                    "values": [1e-4, 1e-3, 1e-2, 1e-1]  
                }
            },
            "instances": 2
        }
    ],
    "load_balancing": {
        "module": "NoLoadBalancing",
        "params": {
            "load_balancing_penalty": {
                "optuna_type": "suggest_categorical",
                "values": [0.0]  
            }
         }
    },
    "heads": [
        {
            "module": "DenseClassifier",
            "params": {
                "input_size": 256,
                "dense1_size": 256,
                "n_labels": 1
            },
            "instances": 1
        },
        {
            "module": "DenseRegressor",
            "params": {
                "input_size": 256,
                "dense1_size": 256
            },
            "instances": 1
        }
    ],
    "no_weight_printing": true
}