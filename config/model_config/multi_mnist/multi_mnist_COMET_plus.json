{
    "bottom": {
        "module": "EmptyBottom",
        "params": {
        }
    },
    "experts": [
        {
            "module": "ConvExpert",
            "params": {
                "conv1_kernel_size": 5,
                "conv1_nb_filters": 10,
                "conv2_kernel_size": 5,
                "conv2_nb_filters": 20,
                "dense1_size": 50,
                "dense2_size": 50
            },
            "instances": 5
        }
    ],
    "permutations": [
        {
            "module": "LearnPermutations",
            "params": {
                "input_size": 5,
                "learn_k_permutations": false,
                "epochs_per_for_learning_permutation": {
                    "optuna_type": "suggest_loguniform",
                    "values": [0.01, 0.05]                      
                },
                "noise_factor": {
                    "optuna_type": "suggest_categorical",
                    "values": [0.0]
                },
                "perm_entropy_reg": {
                    "optuna_type": "suggest_categorical",
                    "values": [1e-4]
                }
             },
            "instances": 1
        }
    ],
    "gates": [
        {
            "module": "SoftKTreesEnsembleGate",
            "params": {
                "k": {
                    "optuna_type": "suggest_categorical",
                    "values": [2]      
                },
                "input_size": 5,
                "gamma": {
                    "optuna_type": "suggest_categorical",
                    "values": [1e-2]               
                },
                "use_routing_input": true,
                "use_in_training": true,
                "entropy_reg": {
                    "optuna_type": "suggest_categorical",
                    "values": [1e-3,1e-2,1e-1,1,5]
                },
                "z_initializer": null,
                "w_initializer": null
            },
            "instances": 2
        }
    ],
    "load_balancing": {
        "module": "NoLoadBalancing",
        "params": {
            "load_balancing_penalty": {
                "optuna_type": "suggest_categorical",
                "values": [0.0]  
            }
         }
    },
    "heads": [
        {
            "module": "DenseMulticlassClassifier",
            "params": {
                "dense1_size": 50,
                "dense2_size": 50,
                "n_labels": 10
            },
            "instances": 2
        }
    ],
    "no_weight_printing": true
}